% Problem: fracs
[Due to Geoff Pike]
Consider the problem of computing
\[ {x_0 \over y_0} \cdot {x_1 \over y_1} \cdots {x_{n-1} \over y_{n-1}} \]
where the $x_i$ and $y_i$ are positive integers.  In a conventional
language such as C++, the difficulty, of course,  
is that the result might overflow the range of representable
integers. 
Let us assume that the numerator and denominator of the 
answer (in lowest terms) are representable (specifically, that their
magnitudes are less than $2^{31}$).  Even then, the product of the
$x_i$, or the product of the $y_i$, or the product of some initial
sequence of the $x_i/y_i$ may not be representable (for example,
consider
\[ \underbrace{{2 \over 3}\cdot{2 \over 3} \cdots {2\over 3}}_{\mbox{40 times}} \cdot \underbrace{{3\over 2} \cdot {3\over2} \cdots {3 \over 2}}_{\mbox{40 times}} \]
which is simply 1). 
{\bf Restriction:} 
Java programmers may {\it not\/} use the classes {\tt BigInteger} or
{\tt BigDecimal} from {\tt java.math}.

The input to your program will consist of 
any number of pairs of integers separated
by slashes.  All integers in the input will be in the range 1 to $2^{31}-1$.
You may assume that there will be no more than 10,000 pairs of integers.

The output will be the product of all the input pairs (treated as
fractions) in lowest terms, represented as a (possibly improper)
fraction.  Again,  assume that the numerator and
denominator of the result (in lowest terms)
will be less than $2^{31}$.
(Warning: there is a 10-second time limit on execution).

\paragraph{Example:} ~

\medskip
{\small
\begin{tabular}{r | r }
\multicolumn{1}{c|}{Input} & \multicolumn{1}{c}{Output}	 \\
\hline
\begin{minipage}[t]{1.75in}
\begin{verbatim}
1000/1 1000/2 1000/3
1000/4
1000/5
1/2     4/7     5/1000
4/1000 3/1000 2/1000
1/1000
\end{verbatim} 
\end{minipage} &
\begin{minipage}[t]{1in}
\begin{verbatim}
2/7
\end{verbatim}
\end{minipage}
\end{tabular}
}
